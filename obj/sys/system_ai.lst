ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 1.
Hexadecimal [16-Bits]



                              1 .include "sys/system_ai.h.s"
                              1 ;;DEPENDENCIAS
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 2.
Hexadecimal [16-Bits]



                              2 .include "main.h.s"
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 3.
Hexadecimal [16-Bits]



                              1 .include "data.h.s"
                              1 ;;MAPS
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 4.
Hexadecimal [16-Bits]



                              2 .include "bins/map_00.h.s"
                              1 ;; File 'src/bins/map_00.h.s' generated using cpct_pack
                              2 ;; Compresor used:   zx7b
                              3 ;; Files compressed: [ 'src/maps/Mapa_00.bin' ]
                              4 ;; Uncompressed:     460 bytes
                              5 ;; Compressed:       120 bytes
                              6 ;; Space saved:      340 bytes
                              7 ;;
                              8 
                              9 ;; Declaration of the compressed array and
                             10 ;; the address of the latest byte of the compressed array (for unpacking purposes)
                             11 .globl _map_00
                             12 .globl _map_00_end
                             13 
                             14 ;; Compressed and uncompressed sizes
                     0078    15 _map_00_size_z == 120
                     01CC    16 _map_00_size   == 460
                             17 
                             18 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 5.
Hexadecimal [16-Bits]



                              3 
                              4 .globl level_index
                              5 
                              6 .globl palette_index
                              7 
                              8 
                              9 ;HUD COSAS
                             10 ;                         ptr
                     A807    11 HUD_P1_DEATHS   = 0xA807
                     A847    12 HUD_P2_DEATHS   = 0xA847
                             13 
                     A80E    14 HUD_P1_SCORE    = 0xA80E
                     A83B    15 HUD_P2_SCORE    = 0xA83B
                             16 
                     A024    17 HUD_SKULL_1     = 0xA024
                     A027    18 HUD_SKULL_2     = 0xA027
                     A02A    19 HUD_SKULL_3     = 0xA02A
                             20 
                             21 
                             22 
                     0002    23 NUM_LEVELS = 2
                             24 
                             25 ;;SPRITES
                             26 .globl _checkpoint_top_spr_0
                             27 .globl _checkpoint_top_spr_1
                             28 
                             29 .globl _player_spr_00
                             30 .globl _player_spr_01
                             31 .globl _player_spr_04
                             32 .globl _player_spr_05
                             33 .globl _player_spr_08
                             34 .globl _player_spr_09
                             35 .globl _player_spr_12
                             36 .globl _player_spr_13
                             37 .globl _player_spr_14
                             38 .globl _player_spr_15
                             39 .globl _player_spr_16
                             40 .globl _player_spr_17
                             41 
                             42 .globl _player_2_spr_00
                             43 .globl _player_2_spr_13
                             44 .globl _player_2_spr_14
                             45 .globl _player_2_spr_15
                             46 .globl _player_2_spr_16
                             47 .globl _player_2_spr_17 
                             48 
                             49 .globl _enemy_spr_00
                             50 .globl _enemy_spr_04
                             51 .globl _enemy_spr_08
                             52 .globl _enemy_spr_12
                             53 .globl _enemy_spr_16
                             54 .globl _enemy_spr_20
                             55 
                             56 .globl _door_spr_0
                             57 .globl _door_spr_1
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 6.
Hexadecimal [16-Bits]



                             58 .globl _door_spr_2
                             59 .globl _door_spr_3
                             60 .globl _door_spr_4
                             61 
                             62 .globl _hud_spr_15
                             63 .globl _hud_spr_14
                             64 .globl _hud_spr_13
                             65 .globl _hud_spr_12
                             66 .globl _hud_spr_11
                             67 .globl _hud_spr_10
                             68 .globl _hud_spr_09
                             69 .globl _hud_spr_08
                             70 .globl _hud_spr_07
                             71 .globl _hud_spr_06
                             72 .globl _hud_spr_05
                             73 .globl _hud_spr_04
                             74 .globl _hud_spr_03
                             75 .globl _hud_spr_02
                             76 .globl _hud_spr_01
                             77 .globl _hud_spr_00
                             78 
                             79 .globl _hud_skull_spr_2
                             80 .globl _hud_skull_spr_1
                             81 .globl _hud_skull_spr_0
                             82 
                             83 .globl _letter_spr_27
                             84 .globl _letter_spr_26
                             85 .globl _letter_spr_25
                             86 .globl _letter_spr_24
                             87 .globl _letter_spr_23
                             88 .globl _letter_spr_22
                             89 .globl _letter_spr_21
                             90 .globl _letter_spr_20
                             91 .globl _letter_spr_19
                             92 .globl _letter_spr_18
                             93 .globl _letter_spr_17
                             94 .globl _letter_spr_16
                             95 .globl _letter_spr_15
                             96 .globl _letter_spr_14
                             97 .globl _letter_spr_13
                             98 .globl _letter_spr_12
                             99 .globl _letter_spr_11
                            100 .globl _letter_spr_10
                            101 .globl _letter_spr_09
                            102 .globl _letter_spr_08
                            103 .globl _letter_spr_07
                            104 .globl _letter_spr_06
                            105 .globl _letter_spr_05
                            106 .globl _letter_spr_04
                            107 .globl _letter_spr_03
                            108 .globl _letter_spr_02
                            109 .globl _letter_spr_01
                            110 .globl _letter_spr_00
                            111 
                            112 .globl _offon_spr_2
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 7.
Hexadecimal [16-Bits]



                            113 .globl _offon_spr_1
                            114 .globl _offon_spr_0
                            115 
                            116 .globl _dospuntos_spr
                            117 
                            118 .globl _double_jump_spr_0
                            119 .globl _double_jump_spr_1
                            120 .globl _double_jump_spr_2
                            121 .globl _double_jump_spr_3
                            122 .globl _double_jump_spr_4
                            123 
                            124 .globl _gravity_spr_13
                            125 .globl _gravity_spr_12
                            126 .globl _gravity_spr_11
                            127 .globl _gravity_spr_10
                            128 .globl _gravity_spr_09
                            129 .globl _gravity_spr_08
                            130 .globl _gravity_spr_07
                            131 .globl _gravity_spr_06
                            132 .globl _gravity_spr_05
                            133 .globl _gravity_spr_04
                            134 .globl _gravity_spr_03
                            135 .globl _gravity_spr_02
                            136 .globl _gravity_spr_01
                            137 .globl _gravity_spr_00
                            138 
                            139 .globl _colectable_spr_3
                            140 .globl _colectable_spr_2
                            141 .globl _colectable_spr_1
                            142 .globl _colectable_spr_0
                            143 .globl _colectable_void_spr
                            144 
                            145 .globl _hud_number_index
                            146 .globl _hud_letter_index
                            147 
                            148 ;;TEXTOS
                            149 .globl mm_singleplayer
                            150 .globl mm_multiplayer
                            151 .globl mm_options
                            152 
                            153 .globl om_controls
                            154 .globl om_p1controls
                            155 .globl om_p2controls
                            156 .globl om_accessibility
                            157 .globl om_godmode
                            158 .globl om_palette
                            159 .globl om_restore
                            160 .globl om_back
                            161 .globl om_changecontrols
                            162 .globl om_rightkey
                            163 .globl om_leftkey
                            164 .globl om_jumpkey
                            165 .globl om_off
                            166 .globl om_on
                            167 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 8.
Hexadecimal [16-Bits]



                            168 .globl pm_pause
                            169 .globl pm_return
                            170 .globl pm_mainmenu
                            171 
                            172 .globl em_completed
                            173 .globl em_score
                            174 .globl em_deaths
                            175 .globl em_p1
                            176 .globl em_p2
                            177 .globl em_time
                            178 .globl em_key
                            179 .globl em_no_p2_score
                            180 .globl em_no_p2_deaths
                            181 
                            182 
                            183 ;;                       Y        X
                     0C30   184 MM_SINGLEPLAYER_POS = 0x0C10 + 0x0020
                     0CD0   185 MM_MULTIPLAYER_POS  = 0x0CB0 + 0x0020
                     0D70   186 MM_OPTIONS_POS      = 0x0D50 + 0x0020
                            187 
                            188 ;;                          Y        X
                     0AE8   189 OM_CONTROLS_POS        = 0x0AD0 + 0x0018
                     0B84   190 OM_P1CONTROLS_POS      = 0x0B70 + 0x0014
                     0C24   191 OM_P2CONTROLS_POS      = 0x0C10 + 0x0014
                     0AFD   192 OM_ACCESSIBILITY_POS    = 0x0AD0 + 0x002E - 1
                     0B9C   193 OM_GODMODE_POS          = 0x0B70 + 0x002C
                     0C3C   194 OM_PALETTE_POS          = 0x0C10 + 0x002C
                     0D70   195 OM_RESTORE_POS          = 0x0D50 + 0x0020
                     0EB4   196 OM_BACK_POS             = 0x0E90 + 0x0024
                     0BA9   197 OM_OFF_POS              = 0x0B70 + 0x002C + 13
                     0BA9   198 OM_ON_POS               = 0x0B70 + 0x002C + 13
                            199 
                     0B89   200 OM_CHANGECONTROLS_POS   = 0x0B70 + 0x0026 - 13
                     0C34   201 OM_RIGHTKEY_POS         = 0x0C10 + 0x002D - 9
                     0C34   202 OM_LEFTKEY_POS          = 0x0C10 + 0x002D - 9
                     0C34   203 OM_JUMPKEY_POS          = 0x0C10 + 0x002D - 9
                            204 
                            205 ;;                   Y        X
                     0B94   206 PM_PAUSE_POS    = 0x0B70 + 0x0026 - 2
                     0C2B   207 PM_RETURN_POS   = 0x0C10 + 0x001C - 1
                     0C3D   208 PM_MAINMENU_POS = 0x0C10 + 0x002D
                            209 
                            210 
                     1298   211 EM_COMPLETED    = 0x1280 + 24
                     13E1   212 EM_SCORE        = 0x13C0 + 33
                     13EA   213 EM_DEATHS       = 0x13C0 + 42
                     147C   214 EM_P1           = 0x1460 + 28
                     151C   215 EM_P2           = 0x1500 + 28
                     1612   216 EM_TIME         = 0x15F0 + 34
                     174B   217 EM_CONTINUE     = 0x1730 + 27
                            218 
                     1480   219 EM_P1_SCORE_DCM = 0x1460 + 32
                     1482   220 EM_P1_SCORE_MC  = EM_P1_SCORE_DCM + 2
                     1484   221 EM_P1_SCORE_DU  = EM_P1_SCORE_MC + 2
                            222 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 9.
Hexadecimal [16-Bits]



                     148B   223 EM_P1_DEATHS_MC = 0x1460 + 43
                     148D   224 EM_P1_DEATHS_DU = EM_P1_DEATHS_MC + 2
                            225 
                     1520   226 EM_P2_SCORE_DCM = 0x1500 + 32
                     1522   227 EM_P2_SCORE_MC  = EM_P2_SCORE_DCM + 2
                     1524   228 EM_P2_SCORE_DU  = EM_P2_SCORE_MC + 2
                            229 
                     152B   230 EM_P2_DEATHS_MC    = 0x1500 + 43
                     152D   231 EM_P2_DEATHS_DU = EM_P2_DEATHS_MC + 2
                            232 
                     1664   233 EM_TOTAL_TIME   = 0x1640 + 36
                            234 
                            235 
                     0320   236 SUBMENU_BOX_1_POS       = 0x0320
                     0360   237 SUBMENU_BOX_2_POS       = 0x0320 + 0x0040
                     1B20   238 SUBMENU_BOX_LINE_TOP    = 0x1B20
                     2460   239 SUBMENU_BOX_LINE_BOTTOM = 0x2460
                            240 
                            241 
                     283B   242 HUD_SCORE_POS = 0x2800 + 59
                     2847   243 HUD_DEATH_POS = 0x2800 + 71
                            244 
                            245 
                            246 ;;STRING CONSTS
                     002F   247 END_STRING = 47
                     003D   248 START_CHARACTERS = 61
                     0030   249 START_NUMBERS = 48
                            250 
                            251 
                            252 
                            253 ;;SPRITE SIZE
                     0030   254 SPR_PLAYER_SIZE = 2 * 3 * 8
                     0004   255 SPR_CHECKPOINT_SIZE = 1 * 4
                     001A   256 SPR_COLLECTABLE_SIZE = 2 * 13
                     0016   257 SPR_DOOR_SIZE = 2 * 11
                     0018   258 SPR_DJUMP_SIZE = 4 * 6
                     0010   259 SPR_GPUP_SIZE = 2 * 8
                            260 
                            261 
                            262 
                            263 
                            264 
                            265 ;PLAYER ANIMATIONS
                            266 .globl anim_player_idle_R
                            267 .globl anim_player_idle_L
                            268 .globl anim_player_run_R
                            269 .globl anim_player_run_L
                            270 .globl anim_player_wall_R
                            271 .globl anim_player_wall_L
                            272 .globl anim_player_jump_R
                            273 .globl anim_player_jump_L
                            274 .globl anim_player_door
                            275 .globl anim_player_2_door
                            276 .globl anim_player_death
                            277 .globl anim_player_2_death
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 10.
Hexadecimal [16-Bits]



                            278 .globl anim_player_respawn
                            279 .globl anim_player_2_respawn
                            280 
                            281 
                            282 ;ENEMY ANIMATIONS
                            283 .globl anim_enemy_R
                            284 .globl anim_enemy_L
                            285 .globl anim_enemy_S
                            286 
                            287 
                            288 ;INTERACTABLE ANIMATIONS
                            289 .globl anim_interactable_door
                            290 .globl anim_interactable_gravity_up_power_up
                            291 .globl anim_interactable_gravity_down_power_up
                            292 .globl anim_interactable_djump_power_up
                            293 .globl anim_interactable_djump_active_power_up
                            294 .globl anim_interactable_colectable
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 11.
Hexadecimal [16-Bits]



                              2 
                              3 
                              4 ;;GLOBLS
                              5 
                              6 .globl cpct_disableFirmware_asm
                              7 .globl cpct_zx7b_decrunch_s_asm
                              8 .globl cpct_scanKeyboard_asm
                              9 .globl cpct_isAnyKeyPressed_f_asm
                             10 .globl cpct_isKeyPressed_asm
                             11 
                             12 
                             13 .globl cpct_drawSprite_asm
                             14 .globl cpct_drawSpriteVFlip_asm
                             15 .globl cpct_drawSpriteMasked_asm
                             16 .globl cpct_drawSpriteVFlipMasked_asm
                             17 .globl cpct_drawTileZigZagGrayCode4x8_af_asm
                             18 .globl cpct_drawSolidBox_asm
                             19 
                             20 
                             21 .globl cpct_setPalette_asm
                             22 .globl cpct_setVideoMode_asm
                             23 .globl cpct_setPALColour_asm
                             24 .globl cpct_getScreenPtr_asm
                             25 .globl cpct_waitVSYNC_asm
                             26 .globl cpct_setVideoMemoryPage_asm
                             27 
                             28 .globl cpct_etm_setDrawTilemap4x8_ag_asm
                             29 .globl cpct_etm_drawTilemap4x8_ag_asm
                             30 
                             31 .globl cpct_akp_musicInit_asm
                             32 .globl cpct_akp_musicPlay_asm
                             33 
                             34 .globl cpct_waitHalts_asm
                             35 
                             36 .globl _cpct_keyboardStatusBuffer
                             37 .globl _g_palette
                             38 .globl _ambient_sound
                             39 
                             40 
                             41 
                             42 ;;AMSTRAD CONSTS
                     0050    43 SCREEN_W = 80
                     00C8    44 SCREEN_H = 200
                             45 
                             46 ;;TILEMAP CONSTS
                             47 
                     0014    48 TILEMAP_W           = 20
                     0017    49 TILEMAP_H           = 23
                     0019    50 TILEMAP_MENU_H      = 25
                             51 
                     2A00    52 TILEMAP_START       = 0x2A00
                     01CC    53 TILEMAP_SIZE        = TILEMAP_W * TILEMAP_H
                     01F4    54 TILEMAP_MENU_SIZE   = TILEMAP_W * TILEMAP_MENU_H
                     2BF4    55 TILESET_START       = TILEMAP_START + TILEMAP_MENU_SIZE
                     0600    56 TILESET_SIZE        = 0X0600
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 12.
Hexadecimal [16-Bits]



                             57 
                     00A0    58 HUD_SIZE            = 80*2
                     C0A0    59 TILEMAP_VMEM_START  = 0xC000+HUD_SIZE
                             60 
                     0020    61 TILE_SIZE           = 4 * 8
                     0004    62 TILE_W              = 4
                     0008    63 TILE_H              = 8
                             64 
                             65 ;;GAME STATES
                     0001    66 GS_SINGLEPLAYER     = 1
                     0002    67 GS_MULTIPLAYER      = 2
                             68 
                             69 ;;ENTITY PHYSICS CONSTS
                     0000    70 _eph_x              = 0
                     0001    71 _eph_y              = 1
                     0002    72 _eph_w              = 2
                     0003    73 _eph_h              = 3
                     0004    74 _eph_vx             = 4
                     0005    75 _eph_vy             = 5
                     0006    76 _eph_offset         = 6
                     0007    77 _eph_attributes     = 7
                     0008    78 _eph_size           = 8
                             79 
                     0005    80 _ephf_orientation   = 5
                     0004    81 _ephf_ground        = 4
                     0003    82 _ephf_wall          = 3
                     0002    83 _ephf_h_ground      = 2
                             84 
                             85 ;;ENTITY DRAWABLE CONSTS
                     0008    86 _ed_spr_l          =  0 + _eph_size
                     0009    87 _ed_spr_h          =  1 + _eph_size
                     000A    88 _ed_spr_wi         =  2 + _eph_size
                     000B    89 _ed_spr_he         =  3 + _eph_size
                     000C    90 _ed_spr_size       =  4 + _eph_size
                     000D    91 _ed_pre_x          =  5 + _eph_size
                     000E    92 _ed_pre_y          =  6 + _eph_size
                     000F    93 _ed_pre_o          =  7 + _eph_size
                     0010    94 _ed_ox             =  8 + _eph_size
                     0011    95 _ed_oy             =  9 + _eph_size
                     0012    96 _ed_anim_ind_h     = 10 + _eph_size
                     0013    97 _ed_anim_ind_l     = 11 + _eph_size
                     0014    98 _ed_anim_pos       = 12 + _eph_size
                     0015    99 _ed_anim_dur       = 13 + _eph_size
                            100 
                            101 
                     0016   102 _ed_size        = 14 + _eph_size
                            103 
                     0007   104 _edf_mask       = 7
                     0006   105 _edf_flip       = 6
                            106 
                            107 ;;ENTITY INTERACTABLE CONSTS
                     0016   108 _ei_score       = 0 + _ed_size
                     0017   109 _ei_type        = 1 + _ed_size
                     0018   110 _ei_disabled    = 2 + _ed_size
                            111 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 13.
Hexadecimal [16-Bits]



                     0019   112 _ei_size        = 3 + _ed_size
                            113 
                     0000   114 _eit_w            = 0
                     0001   115 _eit_h            = 1
                     0002   116 _eit_attributes   = 2
                     0003   117 _eit_spr_l        = 3
                     0004   118 _eit_spr_h        = 4
                     0005   119 _eit_spr_wi       = 5
                     0006   120 _eit_spr_he       = 6
                     0007   121 _eit_spr_size     = 7
                     0008   122 _eit_spr_ox       = 8
                     0009   123 _eit_spr_oy       = 9
                     000A   124 _eit_anim_ind_h   = 10
                     000B   125 _eit_anim_ind_l   = 11
                     000C   126 _eit_score        = 12
                     000D   127 _eit_type         = 13
                            128 
                            129 ;;INTERACTABLE TYPES
                     0000   130 EI_NONE         = 0
                     0001   131 EI_CHECKPOINT   = 1
                     0002   132 EI_DOUBLE_JUMP  = 2
                     0003   133 EI_GRAVITY_UP   = 3
                     0004   134 EI_GRAVITY_DOWN = 4
                     0005   135 EI_COLLECTABLE  = 5
                     0006   136 EI_DOOR         = 6
                            137 
                            138 ;;ENTITY ENEMY CONSTS
                     0016   139 _ee_jump_state = 0 + _ed_size ;;Offset de la tabla de saltos
                     0017   140 _ee_type       = 1 + _ed_size
                     0018   141 _ee_disabled   = 2 + _ed_size
                     0019   142 _ee_origin_x   = 3 + _ed_size
                     001A   143 _ee_origin_y   = 4 + _ed_size
                     001B   144 _ee_size       = 5 + _ed_size
                            145 
                     0001   146 _eef_gravity        = 1
                            147 
                            148 ;; ENEMY TYPE CONSTS
                     0000   149 _eet_w            = 0
                     0001   150 _eet_h            = 1
                     0002   151 _eet_attributes   = 2
                     0003   152 _eet_spr_l        = 3
                     0004   153 _eet_spr_h        = 4
                     0005   154 _eet_spr_wi       = 5
                     0006   155 _eet_spr_he       = 6
                     0007   156 _eet_spr_size     = 7
                     0008   157 _eet_spr_ox       = 8
                     0009   158 _eet_spr_oy       = 9
                     000A   159 _eet_anim_ind_h   = 10
                     000B   160 _eet_anim_ind_l   = 11
                     000C   161 _eet_type         = 12
                            162 
                     0000   163 ET_NONE         = 0
                     0001   164 ET_TURTLE       = 1
                     0002   165 ET_SAW          = 2
                     0003   166 ET_ROCK         = 3
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 14.
Hexadecimal [16-Bits]



                            167 
                     0084   168 EE_DISABLED         = 132
                     0014   169 EE_SAW_DISABLED     = 20
                     0064   170 EE_ROCK_DISABLED    = 100
                            171 
                            172 ;;ENTITY PLAYER CONSTS
                     0016   173 _ep_jump_state      = 0 + _ed_size ;;Offset de la tabla de saltos
                     0017   174 _ep_wall_dir        = 1 + _ed_size ;;Indica si esta chocando con una pared y su orientacion
                     0018   175 _ep_force_x         = 2 + _ed_size ;;Force X
                     0019   176 _ep_score_cdm       = 3 + _ed_size ;;Score [Centenas de Millar, Decenas de Millar]
                     001A   177 _ep_score_mc        = 4 + _ed_size ;;Score [Millares, Centenas]
                     001B   178 _ep_score_du        = 5 + _ed_size ;;Score [Decenas, Unidades]
                     001C   179 _ep_deaths_mc       = 6 + _ed_size ;;Deaths [Millares, Centenas]
                     001D   180 _ep_deaths_du       = 7 + _ed_size ;;Deaths [Decenas, Unidades]
                     001E   181 _ep_player_attr     = 8 + _ed_size ;;Player Attributes
                     001F   182 _ep_anim_counter    = 9 + _ed_size ;;Contador para ciertas animaciones del jugador
                            183 
                     0020   184 _ep_size            = 10 + _ed_size
                            185 
                            186 ;;PLAYERS
                            187 .globl player_1
                            188 .globl player_2
                            189 
                            190 ;; ENEMIES
                            191 .globl enemy_index
                            192 .globl enemy_vector
                            193 .globl me_num_enemy
                            194 
                            195 ;; INTERACTUABLES
                            196 .globl interactable_index
                            197 .globl interactable_vector
                            198 .globl mi_num_interactable
                            199 .globl mi_next_interactable_l
                            200 
                            201 .globl checkpoint_x
                            202 .globl checkpoint_y
                            203 
                            204 ;;JUMP TABLE
                     0000   205 JT_INIT             = 0
                     0000   206 JT_WALL_JUMP        = 0
                     000E   207 JT_ON_GROUND        = 14
                     000F   208 JT_ON_WALL          = 15
                     0016   209 JT_END              = 22
                     0002   210 JT_PTOGRESSIVE_MIN  = 2
                     0008   211 JT_PROGRESSIVE_MAX  = 8
                     000B   212 JT_GRAVITY_CONTINUE = 11
                     0000   213 JT_GRAVITY_MARGIN   = 0
                            214 
                     007F   215 FORCE_X_R           = #0b01111111
                     0080   216 FORCE_X_L           = #0b10000000
                     007D   217 FORCE_X_R_MIN       = FORCE_X_R - 2
                     0083   218 FORCE_X_L_MIN       = FORCE_X_L + 3
                            219 
                            220 ;;SPRITE SIZES
                     0030   221 PLAYER = 48  ;; 0x30 
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 15.
Hexadecimal [16-Bits]



                            222 
                            223 
                            224 ;;COLLISION CONSTS
                     0005   225 GROUP_TRANSPARENT   = 5
                     0026   226 GROUP_SOLID         = 38
                     002E   227 GROUP_DANGEROUS     = 46
                     002F   228 GROUP_GDOWN         = 47
                     0030   229 GROUP_GUP           = 48
                     0050   230 GROUP_ENTITIES      = 80
                            231 
                            232 ;;ENEMY CONSTS
                     0058   233 GROUP_SAW           = 88
                     005A   234 GROUP_ROCK          = 90
                     005C   235 GROUP_TURTLE        = 92
                     005C   236 GROUP_ENEMIES       = 92
                            237 
                            238 ;;INTERACTABLE CONSTS
                     0066   239 GROUP_INTERACTABLE  = 102
                            240 
                            241 
                            242 
                     0000   243 TRANSPARENT  = 0     ; Prioridad +
                     0001   244 GRAVITY_DOWN = 1     ; Prioridad ++
                     0002   245 GRAVITY_UP   = 2     ; Prioridad +++
                     0003   246 DANGEROUS    = 3     ; Prioridad ++++
                     0004   247 SOLID        = 4     ; Prioridad +++++
                            248 
                            249 
                            250 ;;SCORES
                     0064   251 PRIMERO = 100
                     004B   252 SEGUNDO = 75
                     0032   253 TERCERO = 50
                     0019   254 CUARTO  = 25
                            255 
                            256 
                            257 ;; DEFAULT KEYS
                            258 
                     0407   259 P1_KEY_R = #0x0407      ;;Default - 'E'
                     0807   260 P1_KEY_L = #0x0807      ;;Default - 'W'
                     0808   261 P1_KEY_J = #0x0808      ;;Default - 'Q'
                            262 
                     0803   263 P2_KEY_R = #0x0803      ;;Default - 'I'
                     0404   264 P2_KEY_L = #0x0404      ;;Default - 'O'
                     0804   265 P2_KEY_J = #0x0804      ;;Default - 'P'
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 16.
Hexadecimal [16-Bits]



                              3 
                              4 
                              5 
                              6 ;;FUNCIONES
                              7 .globl _sa_manage_enemy_ai
                              8 
                              9 
                             10 ;;CONSTANTES
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 17.
Hexadecimal [16-Bits]



                              2 
                              3 .area _DATA
                              4 
                              5 .area _CODE
                              6 
                              7 
                              8 ;;==================================================================
                              9 ;;                          MANAGE ENEMY AI
                             10 ;;------------------------------------------------------------------
                             11 ;; Maneja al enemigo en función del tipo de enemigo que es y sus datos
                             12 ;;------------------------------------------------------------------
                             13 ;;
                             14 ;; INPUT:
                             15 ;;  IY -> Puntero al enemigo
                             16 ;;
                             17 ;; OUTPUT:
                             18 ;;  DE -> D = Enemy(key_r + key_l) E -> Enemy(key_u + key_d)
                             19 ;;
                             20 ;; DESTROYS:
                             21 ;;  AF, DE
                             22 ;;
                             23 ;;------------------------------------------------------------------
                             24 ;; CYCLES: []
                             25 ;;==================================================================
   0000                      26 _sa_manage_enemy_ai:
                             27     
   0000 11 00 00      [10]   28     ld de, #0x0000
                             29 
   0003 FD 7E 17      [19]   30     ld a, _ee_type(iy)
   0006 FE 01         [ 7]   31     cp #ET_TURTLE
   0008 28 09         [12]   32     jr z, _sa_enemy_turtle_behaviour
                             33 
   000A FE 02         [ 7]   34     cp #ET_SAW
   000C 28 1C         [12]   35     jr z, _sa_enemy_saw_behaviour
                             36 
   000E FE 03         [ 7]   37     cp #ET_ROCK
   0010 28 3C         [12]   38     jr z, _sa_enemy_rock_behaviour
                             39 
   0012 C9            [10]   40     ret
                             41 
                             42 
                             43 
                             44 ;;==================================================================
                             45 ;;                   ENEMY TURTLE BEHAVIOUR
                             46 ;;------------------------------------------------------------------
                             47 ;; Ejecuta el arbol de decisiones del enemigo "Turtle"
                             48 ;;------------------------------------------------------------------
                             49 ;;
                             50 ;; INPUT:
                             51 ;;  IY -> Puntero al enemigo
                             52 ;;
                             53 ;; OUTPUT:
                             54 ;;  DE -> D = Enemy(key_r + key_l) E -> Enemy(key_u + key_d)
                             55 ;;
                             56 ;; DESTROYS:
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 18.
Hexadecimal [16-Bits]



                             57 ;;  AF, DE
                             58 ;;
                             59 ;;------------------------------------------------------------------
                             60 ;; CYCLES: []
                             61 ;;==================================================================
   0013                      62 _sa_enemy_turtle_behaviour:
                             63 
                             64 
   0013 FD 56 04      [19]   65     ld d, _eph_vx(iy)
   0016 FD 5E 05      [19]   66     ld e, _eph_vy(iy)
                             67 
   0019 FD CB 07 5E   [20]   68     bit 3, _eph_attributes(iy)
   001D 20 07         [12]   69     jr nz, etb_change_dir_x
   001F FD CB 07 56   [20]   70         bit 2, _eph_attributes(iy)
   0023 20 01         [12]   71         jr nz, etb_change_dir_x
   0025 C9            [10]   72             ret
                             73 
   0026                      74     etb_change_dir_x:
   0026 AF            [ 4]   75         xor a
   0027 92            [ 4]   76         sub d
   0028 57            [ 4]   77         ld d, a
                             78 
   0029 C9            [10]   79     ret
                             80 
                             81 
                             82 
                             83 
                             84 ;;==================================================================
                             85 ;;                   ENEMY SAW BEHAVIOUR
                             86 ;;------------------------------------------------------------------
                             87 ;; Ejecuta el arbol de decisiones del enemigo "Saw"
                             88 ;;------------------------------------------------------------------
                             89 ;;
                             90 ;; INPUT:
                             91 ;;  IY -> Puntero al enemigo
                             92 ;;
                             93 ;; OUTPUT:
                             94 ;;  DE -> D = Enemy(key_r + key_l) E -> Enemy(key_u + key_d)
                             95 ;;
                             96 ;; DESTROYS:
                             97 ;;  NONE
                             98 ;;
                             99 ;;------------------------------------------------------------------
                            100 ;; CYCLES: []
                            101 ;;==================================================================
   002A                     102 _sa_enemy_saw_behaviour:
                            103 
   002A FD 56 04      [19]  104     ld d, _eph_vx(iy)
   002D FD 5E 05      [19]  105     ld e, _eph_vy(iy)
                            106 
   0030 FD CB 07 5E   [20]  107     bit 3, _eph_attributes(iy)
   0034 20 07         [12]  108     jr nz, esb_die
   0036 FD CB 07 66   [20]  109         bit 4, _eph_attributes(iy)
   003A 20 01         [12]  110         jr nz, esb_die
   003C C9            [10]  111             ret
ASxxxx Assembler V02.00 + NoICE + SDCC mods  (Zilog Z80 / Hitachi HD64180), page 19.
Hexadecimal [16-Bits]



                            112 
   003D                     113     esb_die:
   003D FD 36 18 14   [19]  114         ld _ee_disabled(iy), #EE_SAW_DISABLED   ; Desactivamos al enemigo sierra
   0041 FD 7E 19      [19]  115         ld a, _ee_origin_x(iy)                  ; Reposicionamos al enemigo en su posición de inicio
   0044 FD 77 00      [19]  116         ld _eph_x(iy), a
   0047 FD 7E 1A      [19]  117         ld a, _ee_origin_y(iy)
   004A FD 77 01      [19]  118         ld _eph_y(iy), a
                            119 
   004D C9            [10]  120     ret
                            121 
                            122 ;;==================================================================
                            123 ;;                   ENEMY ROCK BEHAVIOUR
                            124 ;;------------------------------------------------------------------
                            125 ;; Ejecuta el arbol de decisiones del enemigo "Rock"
                            126 ;;------------------------------------------------------------------
                            127 ;;
                            128 ;; INPUT:
                            129 ;;  IY -> Puntero al enemigo
                            130 ;;
                            131 ;; OUTPUT:
                            132 ;;  DE -> D = Enemy(key_r + key_l) E -> Enemy(key_u + key_d)
                            133 ;;
                            134 ;; DESTROYS:
                            135 ;;  NONE
                            136 ;;
                            137 ;;------------------------------------------------------------------
                            138 ;; CYCLES: []
                            139 ;;==================================================================
   004E                     140 _sa_enemy_rock_behaviour:
                            141     
   004E FD 56 04      [19]  142     ld d, _eph_vx(iy)
   0051 FD 5E 05      [19]  143     ld e, _eph_vy(iy)
                            144 
   0054 FD CB 07 5E   [20]  145     bit 3, _eph_attributes(iy)
   0058 20 01         [12]  146     jr nz, erb_die
   005A C9            [10]  147         ret
                            148 
   005B                     149     erb_die:
   005B FD 36 18 64   [19]  150         ld _ee_disabled(iy), #EE_ROCK_DISABLED  ; Desactivamos al enemigo rock
   005F FD 7E 19      [19]  151         ld a, _ee_origin_x(iy)                  ; Reposicionamos al enemigo en su posición de inicio
   0062 FD 77 00      [19]  152         ld _eph_x(iy), a
   0065 FD 7E 1A      [19]  153         ld a, _ee_origin_y(iy)
   0068 FD 77 01      [19]  154         ld _eph_y(iy), a
                            155 
   006B C9            [10]  156     ret
